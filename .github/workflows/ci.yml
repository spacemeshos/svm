name: SVM CI

# On Rust caching
# ---------------
# <https://github.com/Swatinem/rust-cache> is a very attractive alternative to
# rolling your own caching solution, but it's not very effective for Rust
# nightly and it throws away intermediate compilation artifacts, which might
# result in linkage bugs...

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: False
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        profile: [release]
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            ./target/
          key: cargo-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-${{ github.job }}
      - name: Cargo Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --${{ matrix.profile }} -p svm-runtime-ffi -p svm-cli --features=default-cranelift --no-default-features
      - name: List Cargo artifacts
        run: |
          set -e
          ls target
          echo "---"
          ls target/${{ matrix.profile }}
          echo "---"
      - name: Prepare Artifacts
        run: ./tools/cp-artifacts.sh
        env:
          OS: ${{ matrix.os }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@2
        with:
          name: bins-${{ runner.os }}-${{ matrix.profile }}
          path: bins/
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Rust
        run: |
          rustup update nightly
          rustup default nightly
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            ./target/
          key: cargo-${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-${{ github.job }}
      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --features=default-cranelift --no-default-features -- --nocapture
  wasm_codec:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        profile: [release]
    defaults:
      run:
        shell: bash
    steps:
      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Rust
        run: |
          rustup update nightly
          rustup target add wasm32-unknown-unknown --toolchain nightly
          rustup default nightly
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            ./target/
          key: cargo-${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-${{ github.job }}
      - name: Test svm-codec
        working-directory: crates/codec/examples
        run: |
          set -e
          ./run.sh
      - name: Upload `svm_codec.wasm`
        uses: actions/upload-artifact@2
        with:
          name: svm_codec.wasm
          path: target/wasm32-unknown-unknown/${{ matrix.profile }}/svm_codec.wasm
  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install Rust
        run: |
          rustup update nightly
          rustup default nightly
      - name: Run `cargo fmt`
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  cargo-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install Rust
        run: |
          rustup update nightly
          rustup default nightly
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            ./target/
          key: cargo-${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-${{ github.job }}
      - name: Run `cargo doc`
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --workspace --no-deps
  release:
    runs-on: ubuntu-latest
    needs: build
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
      - run: |
          VER="${{ github.ref }}"
          echo "VERSION=${VER#refs/tags/v}" >> $GITHUB_ENV
          ls .
