name: SVM CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # os: [windows-latest]
        node: ["12"]
        # profile: ["--release"]
        profile: [""]
    steps:
      # - name: Dump GitHub context
      # env:
      #   GITHUB_CONTEXT: ${{ toJSON(github) }}
      # run: echo "$GITHUB_CONTEXT"
      - name: Automake (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install automake
      # - name: LLVM (Windows)
      #   if: matrix.os == 'windows-latest'
      #   run: choco install llvm -y
      - name: Download commit
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          default: true
      # - name: Cargo Build
      #   uses: actions-rs/cargo@v1
      #   with:
      #     toolchain: nightly
      #     command: build
      #     args: ${{ matrix.profile }} --features=default-memory,default-rocksdb --no-default-features
      - name: Cargo Test (1st run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --test-threads=1 --nocapture
      - name: Cargo Test (2nd run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --test-threads=1 --nocapture
      - name: Cargo Test (3rd run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --test-threads=1 --nocapture
      - name: Cargo Test (4th run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --test-threads=1 --nocapture
      - name: Cargo Test (5th run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --test-threads=1 --nocapture
      - name: Cargo Test (6th run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --nocapture
      - name: Cargo Test (7th run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --nocapture
      - name: Cargo Test (8th run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --nocapture
      - name: Cargo Test (9th run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --nocapture
      - name: Cargo Test (10th run)
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} -p svm-runtime --features=default-memory --no-default-features -- --nocapture
      # - name: Setup node
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node }}
      # - name: rustup wasm32-unknown-unknown
      #   shell: bash
      #   run: rustup target add wasm32-unknown-unknown --toolchain nightly
      # - name: Test svm-codec (WASM)
      #   shell: bash
      #   run: ./svm-codec-ci.sh
      # - name: Prepare Artifacts
      #   shell: bash
      #   run: mkdir bins/ && for i in $(ls target/${{ matrix.profile }}/{libsvm_runtime_c_api.dylib,libsvm_runtime_c_api.so,svm_runtime_c_api.dll,svm.h,svm_types.h}); do mv $i bins/; done
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: bins-${{ runner.os }}${{ matrix.profile }}
      #     path: bins/
      # - name: Upload `svm_codec.wasm`
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: svm_codec.wasm
      #     if: matrix.os == 'macos-latest'
      #     path: target/wasm32-unknown-unknown/${{ matrix.profile }}/svm_codec.wasm
