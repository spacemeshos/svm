name: SVM CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest]
        node: ["12"]
        profile: [""]
    steps:
      - name: Install automake (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install automake
      - name: Install LLVM (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install llvm -y
      - name: Download commit
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Cache cargo
        id: cache-cargo
        uses: actions/cache@v1
        with:
          path: .cargo/
          key: ${{ runner.os }}-${{ matrix.profile }}-cargo
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build
          args: ${{ matrix.profile }} --all --features=default-memory,default-rocksdb
      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: ${{ matrix.profile }} --all --features=default-memory,default-rocksdb
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: rustup wasm32-unknown-unknown
        shell: bash
        run: rustup target add wasm32-unknown-unknown --toolchain nightly
      - name: test svm-codec.wasm
        shell: bash
        run: ./svm-codec-ci.sh
      - name: Prepare artifacts
        shell: bash
        run: mkdir bins/ && for i in $(ls target/release/{libsvm_runtime_c_api.dylib,libsvm_runtime_c_api.so,svm_runtime_c_api.dll,svm.h,svm_types.h}); do mv $i bins/; done
      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: bins-${{ runner.os }}${{ matrix.profile }}
          path: bins/
      - name: Upload svm_codec.wasm
        uses: actions/upload-artifact@master
        with:
          name: svm_codec.wasm
          if: matrix.os == 'macos-latest'
          path: target/wasm32-unknown-unknown/release/svm_codec.wasm
